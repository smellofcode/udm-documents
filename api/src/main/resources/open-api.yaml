openapi: 3.0.0
info:
  title: udm-documents-web-api
  version: 0.0.0
  description: 'file store api'
  contact:
    name: Maciej Malecki
    url: https://smellofcode.github.io/
    email: malecki.maciej@gmail.com
  x-api-id: fbdfe5a7-431d-457b-b0e0-0c0fde31e63d
  x-api-guidline-version:
    type: string
    format: urn
    pattern: ^[a-z0-9][a-z0-9-:.]{6,62}[a-z0-9]$
    description: Mandatory globally unique and immutable API identifier. The API id allows to track the evolution and history of an API specification as a sequence of versions.
paths:

  /documents:
    get:
      operationId: get-all-files
      description: Gets list of all uploaded files.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DocumentResource'
      tags:
        - DocumentsResource
    post:
      operationId: upload-file
      description: Uploads a new file.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Content of the file for upload.
      responses:
        '200':
          description: Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResource'
        '400':
          $ref: "#/components/responses/400BadRequest"
        '401':
          $ref: "#/components/responses/401Unauthorized"
        '403':
          $ref: "#/components/responses/403Forbidden"
        '404':
          $ref: "#/components/responses/404NotFound"
        '408':
          $ref: "#/components/responses/408Timeout"
        '429':
          $ref: "#/components/responses/429TooManyRequests"
        '500':
          $ref: "#/components/responses/500InternalServerError"
        '503':
          $ref: "#/components/responses/503ServiceUnavailable"
        default:
          description: error occurred - see status code and problem object for more information.
          content:
            "application/problem+json":
              schema:
                $ref: "#/components/schemas/Problem"
      tags:
        - DocumentsResource
  /documents/{id}:
    get:
      operationId: get-file-descriptor
      description: Gets file descriptor.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: File descriptor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResource'
      tags:
        - DocumentsResource
  /documents/{id}/content:
    get:
      operationId: download-file
      description: Downloads a file.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Downloads a content of the file.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      tags:
        - DocumentsResource

components:
  schemas:
    DocumentResource:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        contentType:
          type: string
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: >
            A URI reference that uniquely identifies the problem type only in the
            context of the provided API. Opposed to the specification in RFC-7807,
            it is neither recommended to be dereferencable and point to a
            human-readable documentation nor globally unique for the problem type.
          default: 'about:blank'
          # example: '/not_found'
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable
            for engineers, usually not suited for non technical stakeholders and
            not localized.
        #  example: Not Found
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          # example: 404
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurrence of the
            problem that is helpful to locate the problem and give advice on how
            to proceed. Written in English and readable for engineers, usually not
            suited for non technical stakeholders and not localized.
          # example: The requested resource was not found
        instance:
          type: string
          format: uri-reference
          description: >
            A URI reference that identifies the specific occurrence of the problem,
            e.g. by adding a fragment identifier or sub-path to the problem type.
            May be used to locate the root of this problem in the source code.
        #  example: '/someEndPointUrl'
      required:
        - detail
        - title

  parameters:
    pageNumber:
      name: pageNumber
      in: query
      description: Page Number
      schema:
        type: integer
        format: int32
        default: 1
    pageSize:
      name: pageSize
      in: header
      description: Page Size
      required: false
      schema:
        type: integer
        format: int32
        default: 50

  responses:
    400BadRequest:
      description: Bad request - generic / unknown error. Should also be delivered in case of input payload fails business logic validation.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"

    401Unauthorized:
      description: Unauthorized - the users must log in (this often means "Unauthenticated").
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    403Forbidden:
      description: Forbidden - the user is not authorized to use this resource.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    404NotFound:
      description: Not found - the resource is not found.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    408Timeout:
      description: Request timeout - the server times out waiting for the resource.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    429TooManyRequests:
      description: the client does not consider rate limiting and sent too many requests
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    500InternalServerError:
      description: Internal Server Error - a generic error indication for an unexpected server execution problem (here, client retry may be sensible)
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    503ServiceUnavailable:
      description: Service Unavailable - service is (temporarily) not available (e.g. if a required component or downstream service is not available) â€” client retry may be sensible. If possible, the service should indicate how long the client should wait by setting the Retry- After header.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
    defaultError:
      description: error occurred - see status code and problem object for more information.
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
